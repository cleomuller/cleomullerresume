terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.16"
    }
  }
  required_version = ">= 1.2.0"
}
provider "aws" {
  region = "eu-central-1"
}

variable "website_root" {
  type        = string
  description = "Path to the root of website content"
  default     = "../content"
}

resource "aws_s3_bucket" "cloudresumeS3bucket" {
  bucket = "the-cloud-resume-challenge-bucket"

  tags = {
    Name        = "Cloud Resume Bucket"
    Environment = "Dev"
  }

  website {
    index_document = "cleomullerresume.html"
  }
}

resource "aws_s3_bucket_policy" "bucket_policy" {
  bucket = "the-cloud-resume-challenge-bucket"
  policy = jsonencode(
    {
      "Version" : "2023-07-12",
      "Statement" : [
        {
          "Sid" : "PublicReadGetObject",
          "Effect" : "Allow",
          "Principal" : "*",
          "Action" : "s3:GetObject",
          "Resource" : "arn:aws:s3:::the-cloud-resume-challenge-bucket/*"
        }
      ]
    }
  )
}

resource "aws_s3_object" "file" {
  for_each     = fileset(path.module, "content/**/*.{html,css,js,png,jpeg}")
  bucket       = "the-cloud-resume-challenge-bucket"
  key          = replace(each.value, "/^content//", "")
  source       = each.value
  content_type = lookup(local.content_types, regex("\\.[^.]+$", each.value), null)
  etag         = filemd5(each.value)
}
resource "aws_s3_bucket_website_configuration" "hosting" {
  bucket = "the-cloud-resume-challenge-bucket"

  index_document {
    suffix = "cleomullerresume.html"
  }
}

# resource "aws_cloudfront_distribution" "distribution" {
#   enabled         = true
#   is_ipv6_enabled = true

#   origin {
#     domain_name = aws_s3_bucket_website_configuration.hosting.website_endpoint
#     origin_id   = aws_s3_bucket.bucket.bucket_regional_domain_name

#     custom_origin_config {
#       http_port                = 80
#       https_port               = 443
#       origin_keepalive_timeout = 5
#       origin_protocol_policy   = "http-only"
#       origin_read_timeout      = 30
#       origin_ssl_protocols = [
#         "TLSv1.2",
#       ]
#     }
#   }

#   viewer_certificate {
#     cloudfront_default_certificate = true
#   }

#   restrictions {
#     geo_restriction {
#       restriction_type = "none"
#       locations        = []
#     }
#   }

#   default_cache_behavior {
#     cache_policy_id        = "658327ea-f89d-4fab-a63d-7e88639e58f6"
#     viewer_protocol_policy = "redirect-to-https"
#     compress               = true
#     allowed_methods        = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
#     cached_methods         = ["GET", "HEAD"]
#     target_origin_id       = aws_s3_bucket.bucket.bucket_regional_domain_name
#   }
# }